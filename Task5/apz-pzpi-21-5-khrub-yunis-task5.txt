1 ПОБУДОВА ДІАГРАМИ ПРЕЦЕДЕНТІВ

Мобільний застосунок розраховано для адміністартора, який зможе робити дії, які представлені у діаграмі прецедентів(див.рис. 1.1)
 	Логін:
•	Опис: Користувач вводить свої облікові дані для аутентифікації та доступу до мобільного додатка.
•	Взаємодія: Це початкова точка входу в систему, після успішного логіну користувач отримує доступ до панелі мобільного додатка.
Панель мобільного додатка:
•	Опис: Головний екран додатка, з якого користувач може переходити до інших функцій, таких як перегляд документів, препаратів, діалогів та надсилання повідомлень.
•	Включає: Перегляд документів, Перегляд препаратів, Перегляд діалогів, Надіслати повідомлення.
Перегляд документів:
•	Опис: Користувач може переглядати різні документи, доступні в додатку.
•	Взаємодія: Ця функція є частиною панелі мобільного додатка і включається нею.
Перегляд препаратів:
•	Опис: Користувач може переглядати інформацію про різні препарати.
•	Взаємодія: Ця функція є частиною панелі мобільного додатка і включається нею.
Перегляд діалогів:
•	Опис: Користувач може переглядати свої діалоги та історію повідомлень.
•	Взаємодія: Ця функція є частиною панелі мобільного додатка і включається нею.
Надіслати повідомлення:
•	Опис: Користувач може надсилати повідомлення іншим користувачам додатка.
•	Взаємодія: Ця функція є частиною перегляду діалогів і включається нею.

2 ПОБУДОВА ДІАГРАМИ КОМПОНЕНТІВ

Ця діаграма відображає структуру та взаємодію ключових компонентів у додатку. На ній представлено організацію коду та його компонентів для полегшення розробки та зрозумілості системи.
	Взаємозв'язки між компонентами
•	Database Component <-> Server Component:
o	Серверний компонент використовує компонент бази даних для зберігання та витягування даних. Це здійснюється через запити до бази даних, які виконуються репозиторіями та сервісами серверного компонента.
•	Server Component <-> Mobile Component:
o	Мобільний компонент взаємодіє з серверним компонентом через API. Мобільний додаток надсилає HTTP-запити до серверу, де вони обробляються контролерами API. Серверний компонент повертає необхідні дані або результати операцій у вигляді HTTP-відповідей.
Мобільний клієнт при оброблені кнопок, сторінок, робить запити до серверу та від нього вже отримує відповідь(див. рис. 2.1).

3 ПОБУДОВА ДІАГРАМИ ДІЯЛЬНОСТІ

Користувач мобільним додатком, робить певну діяльність, користуючись додатком.

4 ПОБУДОВА ДІАГРАМИ ПАКЕТІВ

Мобільний додаток організований у декілька логічних пакетів, кожен з яких відповідає за певну функціональність додатку. Нижче наведено структуру пакетів, яку можна візуалізувати у вигляді діаграми.
Пакети мобільного додатку:
model:
•	Призначення: Містить моделі даних, які використовуються в мобільному додатку.
•	Класи: Comment, Document, Drug, Login, Message, UserMessage.
 ui:
•	Призначення: Містить активності та фрагменти, які відповідають за відображення даних та взаємодію з користувачем.
•	Класи: CommentActivity, DirectActivity, DocumentActivity, DrugActivity, LoginActivity, MainActivity, MessageActivity.
res:
•	Призначення: Містить ресурси додатку, такі як зображення, макети, меню, значки та інші XML-файли.
•	Підпакети: drawable, layout, menu, mipmap, navigation, values, xml.
Діаграма пакетів відображає структуру та організацію різних компонентів у нашому додатку. Нижче подано опис кожного пакету та його функціональності(див.рис. 4.1).
            
5 ТЕХНОЛОГІЇ

Отже, мобільний клієнт робить запит до серверу, та отримує від нього дані та відповідь.
Мобільний додаток взаємодіє з сервером для отримання та відправлення даних. Ця взаємодія включає виконання HTTP-запитів до серверного API. У цьому розділі ми розглянемо інженерні та архітектурні рішення, прийняті для забезпечення надійної та ефективної комунікації між мобільним додатком та сервером.
OkHttp є потужною бібліотекою для виконання HTTP-запитів, яка забезпечує ефективну обробку запитів та відповідей. Переваги: Легкість інтеграції, висока продуктивність, підтримка асинхронних запитів, простота налаштування.
Використання асинхронних запитів дозволяє виконувати HTTP-запити у фоновому режимі, не блокуючи основний потік додатка. Переваги: Підвищення продуктивності та швидкості реакції інтерфейсу користувача, забезпечення кращого користувацького досвіду.
Структура додатка поділена на логічні пакети, кожен з яких відповідає за певну функціональність. Зокрема, пакет ui відповідає за інтерфейс користувача, пакет model за моделі дані. Використання патерну MVVM для розділення логіки представлення (View) від логіки бізнесу та даних (Model) за допомогою проміжного шару ViewModel. 
Для передачі даних між мобільним додатком та сервером використовується JSON (JavaScript Object Notation), що є стандартним форматом для обміну даними в веб-додатках. Використання бібліотеки Gson дозволяє легко перетворювати Java об'єкти в JSON і назад.
Розглянемо код функції, які виконуються при взаємодії з мобільним клієнтом.

ВИСНОВКИ

Отже, було зроблено мобільну частину додатку, та прийнято певні інженерні рішення, щодо застосунку.